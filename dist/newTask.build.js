(()=>{"use strict";var n={342:(n,t,e)=>{e.d(t,{Z:()=>a});var r=e(537),o=e.n(r),i=e(645),A=e.n(i)()(o());A.push([n.id,".progress {\n  display: flex;\n  flex-direction: row;\n  background-color: transparent;\n  gap: 0px;\n  --rotationA: 180deg;\n  --rotationB: 180deg;\n  /* padding: 2px; */\n  --color: #1368c4;\n  width: 50px;\n  /* min-width: 50px; */\n  /* min-height: 50px; */\n  /* height: 50px; */\n  aspect-ratio: 1/1;\n  border-radius: 50%;\n  overflow: hidden;\n  box-sizing: border-box;\n  border: 1px solid var(--color);\n  /* transform: scale(3); */\n  /* position: relative; */\n}\n\n.wrapper {\n  display: flex;\n  width: 50%;\n  height: 100%;\n  background-color: transparent;\n  margin: 0px;\n  overflow: hidden;\n}\n\n.spinner {\n  width: 100%;\n  height: 100%;\n  background-color: var(--color);\n  /* background: linear-gradient(to bottom, lightgreen, pink); */\n  overflow: hidden;\n}\n.wrapper:first-child .spinner {\n  transform-origin: 100% 50%;\n  transform: rotate(var(--rotationA));\n}\n\n.wrapper:last-child .spinner {\n  transform-origin: 0% 50%;\n  transform: rotate(var(--rotationB));\n}\n","",{version:3,sources:["webpack://./src/pm.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,mBAAmB;EACnB,6BAA6B;EAC7B,QAAQ;EACR,mBAAmB;EACnB,mBAAmB;EACnB,kBAAkB;EAClB,gBAAgB;EAChB,WAAW;EACX,qBAAqB;EACrB,sBAAsB;EACtB,kBAAkB;EAClB,iBAAiB;EACjB,kBAAkB;EAClB,gBAAgB;EAChB,sBAAsB;EACtB,8BAA8B;EAC9B,yBAAyB;EACzB,wBAAwB;AAC1B;;AAEA;EACE,aAAa;EACb,UAAU;EACV,YAAY;EACZ,6BAA6B;EAC7B,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,8BAA8B;EAC9B,8DAA8D;EAC9D,gBAAgB;AAClB;AACA;EACE,0BAA0B;EAC1B,mCAAmC;AACrC;;AAEA;EACE,wBAAwB;EACxB,mCAAmC;AACrC",sourcesContent:[".progress {\n  display: flex;\n  flex-direction: row;\n  background-color: transparent;\n  gap: 0px;\n  --rotationA: 180deg;\n  --rotationB: 180deg;\n  /* padding: 2px; */\n  --color: #1368c4;\n  width: 50px;\n  /* min-width: 50px; */\n  /* min-height: 50px; */\n  /* height: 50px; */\n  aspect-ratio: 1/1;\n  border-radius: 50%;\n  overflow: hidden;\n  box-sizing: border-box;\n  border: 1px solid var(--color);\n  /* transform: scale(3); */\n  /* position: relative; */\n}\n\n.wrapper {\n  display: flex;\n  width: 50%;\n  height: 100%;\n  background-color: transparent;\n  margin: 0px;\n  overflow: hidden;\n}\n\n.spinner {\n  width: 100%;\n  height: 100%;\n  background-color: var(--color);\n  /* background: linear-gradient(to bottom, lightgreen, pink); */\n  overflow: hidden;\n}\n.wrapper:first-child .spinner {\n  transform-origin: 100% 50%;\n  transform: rotate(var(--rotationA));\n}\n\n.wrapper:last-child .spinner {\n  transform-origin: 0% 50%;\n  transform: rotate(var(--rotationB));\n}\n"],sourceRoot:""}]);const a=A},951:(n,t,e)=>{e.d(t,{Z:()=>a});var r=e(537),o=e.n(r),i=e(645),A=e.n(i)()(o());A.push([n.id,'#checklist-adder {\n  /* width: 100%; */\n  display: flex;\n  gap: 16px;\n  opacity: 1;\n  align-items: center;\n  box-sizing: border-box;\n  padding: 8px 68px;\n  position: absolute;\n  opacity: 0.7;\n  cursor: pointer;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: #f4f5f7;\n  /* position: relative; */\n\n  &::before {\n    content: "";\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 100%;\n    height: 1px;\n    background-color: rgba(0, 0, 0, 0.1);\n    /* box-shadow: 0px -3px 5px 3px rgba(0, 0, 0, 0.1); */\n  }\n\n  &::after {\n    content: "";\n    position: absolute;\n    top: -32px;\n    left: 0px;\n    width: 100%;\n    height: 32px;\n    background: linear-gradient(to top, #f4f5f7, transparent);\n  }\n\n  &:hover {\n    opacity: 1;\n    background-color: #dee1e6;\n  }\n  /* background-color: blue; */\n}\n\n#checklist-adder :first-child {\n  font-size: 32px;\n  font-weight: 300;\n  /* font-size: 16px; */\n  width: 26px;\n  height: 26px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n#checklist-adder :last-child {\n  font-size: 18px;\n  /* font-weight: 300; */\n}\n\n#checklist-adder svg {\n  width: 32px;\n  height: 32px;\n}\n\nsvg path {\n  width: 32px;\n  height: 32px;\n}\n#lists {\n  box-sizing: border-box;\n  flex-grow: 1;\n  overflow-y: auto;\n}\n\n#lists::-webkit-scrollbar {\n  width: 8px;\n  /* appearance: none; */\n  border-radius: 15px;\n  background-color: purple;\n  padding: 0;\n  background-color: #f4f5f7;\n  margin: 0;\n  transition: all 0.2s ease-in-out;\n}\n\n#lists::-webkit-scrollbar:hover {\n  width: 16px;\n}\n\n#lists::-webkit-scrollbar-thumb {\n  /* width: 0px; */\n  /* appearance: none; */\n  background-color: #1469c4;\n  border-radius: 8px;\n  width: 32px;\n}\n\n#lists::-webkit-scrollbar-track {\n  border-radius: 8px;\n  /* width: 0px; */\n  /* appearance: none; */\n  background-color: #f4f5f7;\n}\n\n#lists::-webkit-scrollbar-button {\n  /* width: 0px; */\n  height: 0px;\n  /* appearance: none; */\n  background-color: #1469c4;\n}\n\n.list-heading * {\n}\n\n.list-heading h3 {\n  transition: all 0.3s ease-in-out;\n  display: flex;\n  flex-direction: row-reverse;\n}\n\n.list-heading:hover h3 {\n  /* transform: translate(25px, 0); */\n}\n\n.list-heading h3 div {\n  width: 0px;\n  transition: all 0.3s ease-in-out;\n}\n\n.list-heading h3:hover div {\n  width: 25px;\n}\n',"",{version:3,sources:["webpack://./src/taskview.css"],names:[],mappings:"AAAA;EACE,iBAAiB;EACjB,aAAa;EACb,SAAS;EACT,UAAU;EACV,mBAAmB;EACnB,sBAAsB;EACtB,iBAAiB;EACjB,kBAAkB;EAClB,YAAY;EACZ,eAAe;EACf,SAAS;EACT,OAAO;EACP,QAAQ;EACR,yBAAyB;EACzB,wBAAwB;;EAExB;IACE,WAAW;IACX,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,WAAW;IACX,WAAW;IACX,oCAAoC;IACpC,qDAAqD;EACvD;;EAEA;IACE,WAAW;IACX,kBAAkB;IAClB,UAAU;IACV,SAAS;IACT,WAAW;IACX,YAAY;IACZ,yDAAyD;EAC3D;;EAEA;IACE,UAAU;IACV,yBAAyB;EAC3B;EACA,4BAA4B;AAC9B;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,qBAAqB;EACrB,WAAW;EACX,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,sBAAsB;AACxB;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;AACd;AACA;EACE,sBAAsB;EACtB,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,UAAU;EACV,sBAAsB;EACtB,mBAAmB;EACnB,wBAAwB;EACxB,UAAU;EACV,yBAAyB;EACzB,SAAS;EACT,gCAAgC;AAClC;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,gBAAgB;EAChB,sBAAsB;EACtB,yBAAyB;EACzB,kBAAkB;EAClB,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,sBAAsB;EACtB,yBAAyB;AAC3B;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,sBAAsB;EACtB,yBAAyB;AAC3B;;AAEA;AACA;;AAEA;EACE,gCAAgC;EAChC,aAAa;EACb,2BAA2B;AAC7B;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,UAAU;EACV,gCAAgC;AAClC;;AAEA;EACE,WAAW;AACb",sourcesContent:['#checklist-adder {\n  /* width: 100%; */\n  display: flex;\n  gap: 16px;\n  opacity: 1;\n  align-items: center;\n  box-sizing: border-box;\n  padding: 8px 68px;\n  position: absolute;\n  opacity: 0.7;\n  cursor: pointer;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: #f4f5f7;\n  /* position: relative; */\n\n  &::before {\n    content: "";\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 100%;\n    height: 1px;\n    background-color: rgba(0, 0, 0, 0.1);\n    /* box-shadow: 0px -3px 5px 3px rgba(0, 0, 0, 0.1); */\n  }\n\n  &::after {\n    content: "";\n    position: absolute;\n    top: -32px;\n    left: 0px;\n    width: 100%;\n    height: 32px;\n    background: linear-gradient(to top, #f4f5f7, transparent);\n  }\n\n  &:hover {\n    opacity: 1;\n    background-color: #dee1e6;\n  }\n  /* background-color: blue; */\n}\n\n#checklist-adder :first-child {\n  font-size: 32px;\n  font-weight: 300;\n  /* font-size: 16px; */\n  width: 26px;\n  height: 26px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n#checklist-adder :last-child {\n  font-size: 18px;\n  /* font-weight: 300; */\n}\n\n#checklist-adder svg {\n  width: 32px;\n  height: 32px;\n}\n\nsvg path {\n  width: 32px;\n  height: 32px;\n}\n#lists {\n  box-sizing: border-box;\n  flex-grow: 1;\n  overflow-y: auto;\n}\n\n#lists::-webkit-scrollbar {\n  width: 8px;\n  /* appearance: none; */\n  border-radius: 15px;\n  background-color: purple;\n  padding: 0;\n  background-color: #f4f5f7;\n  margin: 0;\n  transition: all 0.2s ease-in-out;\n}\n\n#lists::-webkit-scrollbar:hover {\n  width: 16px;\n}\n\n#lists::-webkit-scrollbar-thumb {\n  /* width: 0px; */\n  /* appearance: none; */\n  background-color: #1469c4;\n  border-radius: 8px;\n  width: 32px;\n}\n\n#lists::-webkit-scrollbar-track {\n  border-radius: 8px;\n  /* width: 0px; */\n  /* appearance: none; */\n  background-color: #f4f5f7;\n}\n\n#lists::-webkit-scrollbar-button {\n  /* width: 0px; */\n  height: 0px;\n  /* appearance: none; */\n  background-color: #1469c4;\n}\n\n.list-heading * {\n}\n\n.list-heading h3 {\n  transition: all 0.3s ease-in-out;\n  display: flex;\n  flex-direction: row-reverse;\n}\n\n.list-heading:hover h3 {\n  /* transform: translate(25px, 0); */\n}\n\n.list-heading h3 div {\n  width: 0px;\n  transition: all 0.3s ease-in-out;\n}\n\n.list-heading h3:hover div {\n  width: 25px;\n}\n'],sourceRoot:""}]);const a=A},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",r=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),r&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),r&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(r)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(A[s]=!0)}for(var c=0;c<n.length;c++){var p=[].concat(n[c]);r&&A[p[0]]||(void 0!==i&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=i),e&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=e):p[2]=e),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),t.push(p))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,r=0;r<t.length;r++)if(t[r].identifier===n){e=r;break}return e}function r(n,r){for(var i={},A=[],a=0;a<n.length;a++){var s=n[a],c=r.base?s[0]+r.base:s[0],p=i[c]||0,l="".concat(c," ").concat(p);i[c]=p+1;var d=e(l),h={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)t[d].references++,t[d].updater(h);else{var u=o(h,r);r.byIndex=a,t.splice(a,0,{identifier:l,updater:u,references:1})}A.push(l)}return A}function o(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var A=0;A<i.length;A++){var a=e(i[A]);t[a].references--}for(var s=r(n,o),c=0;c<i.length;c++){var p=e(i[c]);0===t[p].references&&(t[p].updater(),t.splice(p,1))}i=s}}},569:n=>{var t={};n.exports=function(n,e){var r=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,o&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}},173:(n,t,e)=>{e(538),e(15)},249:(n,t,e)=>{var r=e(379),o=e.n(r),i=e(795),A=e.n(i),a=e(569),s=e.n(a),c=e(565),p=e.n(c),l=e(216),d=e.n(l),h=e(589),u=e.n(h),f=e(342),g={};g.styleTagTransform=u(),g.setAttributes=p(),g.insert=s().bind(null,"head"),g.domAPI=A(),g.insertStyleElement=d(),o()(f.Z,g),f.Z&&f.Z.locals&&f.Z.locals},15:(n,t,e)=>{e.d(t,{Z:()=>i});var r=e(538);function o(n,t){this.title=n,this.tasks=t,this.changeSubs=[]}o.prototype.sub=function(n){this.changeSubs.push(n)},o.prototype.fire=function(){this.changeSubs.forEach((n=>n())),(0,r.fw)(r.r$)};const i=o},538:(n,t,e)=>{e.d(t,{fw:()=>A,r$:()=>o});var r=e(15);const o=1,i=[];new r.Z("Untitled Project 1",[]);const A=n=>{n===o&&(console.log("Firing EVENT_PROJECTS_UPDATE"),i.forEach((n=>n())))}},507:()=>{function n(n,t,e,r,o,i){this.title=n,this.description=t,this.proirity=e,this.checkLists=r,this.precent=0,this.date=o,this.changeSubs=[],this.project=i}n.prototype.calcPercent=function(){console.log(this.checkLists);let n=0,t=0;for(const e of this.checkLists)for(const r in e)n++,e[r]&&t++;return this.precent=t/n,0==n?0:(console.log(this.precent),this.precent)},n.prototype.sub=function(n){this.changeSubs.push(n)},n.prototype.fire=function(){this.changeSubs.forEach((n=>n())),this.project.fire()}},965:(n,t,e)=>{e(249),e(173);var r=e(379),o=e.n(r),i=e(795),A=e.n(i),a=e(569),s=e.n(a),c=e(565),p=e.n(c),l=e(216),d=e.n(l),h=e(589),u=e.n(h),f=e(951),g={};g.styleTagTransform=u(),g.setAttributes=p(),g.insert=s().bind(null,"head"),g.domAPI=A(),g.insertStyleElement=d(),o()(f.Z,g),f.Z&&f.Z.locals&&f.Z.locals,e(538)}},t={};function e(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return n[r](i,i.exports,e),i.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.nc=void 0,e(965),e(507)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,